class Solution {
    public int minimumLengthEncoding(String[] words) {
        Trie trie = new Trie();
        HashMap<Trie , Integer> nodes = new HashMap<>();
        for(int i = 0 ; i <words.length ; i++){
            String temp_word = words[i];
            Trie curr = trie;
            for(int j = temp_word.length()-1; j>=0;j--){
                curr = curr.get(temp_word.charAt(j));
            }
            nodes.put(curr, i);
        }
        
        int ans = 0;
        for(Trie node : nodes.keySet()){
            if(node.count == 0){
                ans += words[nodes.get(node)].length()+1;
            }
            
        }
        return ans;
    }
}


class Trie{
    Trie [] children;
    int count;
    Trie(){
        children = new Trie[26];
        count = 0;
    }
    Trie get(char ch){
        if(children[ch - 'a'] == null){
            children[ch - 'a'] = new Trie();
            count++;
        }
        return children[ch - 'a'];
    }
}
